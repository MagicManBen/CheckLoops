import { chromium } from 'playwright';

(async () => {
  console.log('Starting CQC test...');
  const browser = await chromium.launch({
    headless: false,
    devtools: true
  });

  const context = await browser.newContext();
  const page = await context.newPage();

  // Enable console logging
  page.on('console', msg => {
    console.log('Browser console:', msg.type(), msg.text());
  });

  page.on('pageerror', err => {
    console.error('Page error:', err);
  });

  try {
    // Navigate to the HTML file
    console.log('1. Navigating to cqctest.html...');
    await page.goto('http://127.0.0.1:5500/cqctest.html');
    await page.waitForTimeout(2000);

    // Type "DR" in search
    console.log('2. Typing "DR" in search field...');
    await page.fill('#searchInput', 'DR');
    await page.waitForTimeout(1500); // Wait for search to execute (has 300ms debounce)

    // Check if results appeared
    await page.waitForTimeout(1000); // Give time for results to render
    const resultsVisible = await page.locator('.surgery-card').first().isVisible().catch(() => false);

    // Also check by counting
    const resultCount = await page.locator('.surgery-card').count();
    console.log(`Found ${resultCount} surgery cards`);

    if (!resultsVisible || resultCount === 0) {
      console.error('No results found!');
      // Check for error message
      const errorMessage = await page.locator('.error').textContent().catch(() => null);
      if (errorMessage) {
        console.error('Error message:', errorMessage);
      }
      // Try to check what's in the results div
      const resultsHTML = await page.locator('#searchResults').innerHTML();
      console.log('Results div content:', resultsHTML.substring(0, 500));
    } else {
      console.log('3. Search results appeared!');
      console.log(`Total results: ${resultCount}`);

      // Click the first result
      console.log('4. Clicking first result...');
      await page.locator('.surgery-card').first().click();
      await page.waitForTimeout(2000);

      // Check if modal opened
      const modalVisible = await page.locator('#detailsModal').isVisible();
      if (!modalVisible) {
        console.error('Modal did not open!');
      } else {
        console.log('5. Modal opened successfully!');

        // Wait for content to load
        await page.waitForTimeout(2000);

        // Click "Fetch More Details" button
        console.log('6. Clicking "Fetch More Details" button...');
        const fetchButton = page.locator('#fetchDetailsBtn');
        const buttonVisible = await fetchButton.isVisible().catch(() => false);

        if (!buttonVisible) {
          console.error('Fetch button not visible!');
          const modalContent = await page.locator('#modalBody').innerHTML();
          console.log('Modal content:', modalContent.substring(0, 500));
        } else {
          await fetchButton.click();
          console.log('7. Fetching CQC details...');

          // Wait for the fetch to complete - wait for either success or error message
          try {
            await page.waitForSelector('#apiResult .success, #apiResult .error', {
              timeout: 30000,
              state: 'visible'
            });
          } catch (e) {
            console.log('Timeout waiting for result, checking current state...');
          }

          await page.waitForTimeout(2000); // Give a bit more time for rendering

          // Check for success or error
          const successVisible = await page.locator('#apiResult .success').isVisible().catch(() => false);
          const errorVisible = await page.locator('#apiResult .error').isVisible().catch(() => false);

          const apiResultHTML = await page.locator('#apiResult').innerHTML();
          console.log('API Result HTML length:', apiResultHTML.length);

          if (successVisible) {
            console.log('8. SUCCESS! CQC details fetched successfully!');
            const successText = await page.locator('#apiResult .success').textContent();
            console.log('Success message:', successText);

            // Check if CQC data sections are present
            const hasLocationDetails = apiResultHTML.includes('CQC Location Details');
            const hasProviderDetails = apiResultHTML.includes('CQC Provider Details');
            console.log('Has Location Details:', hasLocationDetails);
            console.log('Has Provider Details:', hasProviderDetails);

            // Try to get some actual data
            if (hasLocationDetails) {
              const detailItems = await page.locator('#apiResult .detail-item').count();
              console.log('Number of detail items:', detailItems);
            }
          } else if (errorVisible) {
            const errorText = await page.locator('#apiResult .error').textContent();
            console.error('8. ERROR fetching CQC details:', errorText);
          } else {
            console.log('8. No clear success/error message found');
            console.log('API Result HTML preview:', apiResultHTML.substring(0, 1000));
          }
        }
      }
    }

    // Keep browser open for 10 seconds to review
    console.log('Test complete. Keeping browser open for review...');
    await page.waitForTimeout(10000);

  } catch (error) {
    console.error('Test error:', error);
    // Take screenshot on error
    await page.screenshot({ path: 'error-screenshot.png', fullPage: true });
    console.log('Screenshot saved as error-screenshot.png');
  } finally {
    await browser.close();
    console.log('Test finished.');
  }
})();
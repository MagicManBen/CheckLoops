<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>CheckLoop — Staff Dashboard</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="preconnect" href="https://img.icons8.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700;800&display=swap" rel="stylesheet">
  <script src="config.js"></script>
  <script src="rls-fix.js"></script>
  <style>
    :root {
      /* Modern Color Palette */
      --primary: #0b4fb3;
      --primary-dark: #062b6f;
      --primary-light: #2b6ecc;
      --primary-lightest: #e8f2ff;

      --accent: #76a7ff;
      --accent-2: #5f96ff;
      --success: #2bd4a7;
      --success-light: #e8fdf8;
      --warning: #ffca28;
      --warning-light: #fffbeb;
      --danger: #ff6b6b;
      --danger-light: #fef2f2;

      --white: #ffffff;
      --gray-50: #f8fafc;
      --gray-100: #f1f5f9;
      --gray-200: #e2e8f0;
      --gray-300: #cbd5e1;
      --gray-400: #94a3b8;
      --gray-500: #64748b;
      --gray-600: #475569;
      --gray-700: #334155;
      --gray-800: #1e293b;
      --gray-900: #0f172a;

      --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
      --shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
      --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
      --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
      --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1);
      --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);

      --radius-sm: 0.375rem;
      --radius: 0.5rem;
      --radius-lg: 0.75rem;
      --radius-xl: 1rem;
      --radius-2xl: 1.5rem;

      --font-sans: 'Inter', system-ui, -apple-system, sans-serif;
      --font-display: 'Plus Jakarta Sans', 'Inter', sans-serif;

      --transition: all 0.2s ease-in-out;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body {
      height: 100%;
    }

    body {
      font-family: var(--font-sans);
      background: var(--gray-50);
      color: var(--gray-700);
      overflow-x: hidden;
    }

    /* Modern Layout Structure */
    .dashboard-container {
      display: flex;
      min-height: 100vh;
    }

    /* Sidebar */
    .sidebar {
      width: 260px;
      background: var(--white);
      border-right: 1px solid var(--gray-200);
      display: flex;
      flex-direction: column;
      position: fixed;
      height: 100vh;
      z-index: 10;
      transition: transform 0.3s ease;
    }

    .sidebar-header {
      padding: 1.5rem;
      border-bottom: 1px solid var(--gray-200);
    }

    .logo {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
    }

    .logo-icon {
      width: 2.5rem;
      height: 2.5rem;
      background: linear-gradient(135deg, var(--primary), var(--accent));
      border-radius: var(--radius-lg);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-weight: 700;
      font-size: 1.25rem;
    }

    .logo-text {
      font-size: 1.5rem;
      font-weight: 800;
      color: var(--gray-900);
      font-family: var(--font-display);
    }

    .sidebar-nav {
      flex: 1;
      padding: 1rem 0;
      overflow-y: auto;
    }

    .nav-section {
      padding: 0.5rem 1rem;
      margin-bottom: 1rem;
    }

    .nav-section-title {
      font-size: 0.75rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.05em;
      color: var(--gray-400);
      margin-bottom: 0.5rem;
    }

    .nav-item {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: 0.75rem 1rem;
      margin: 0.25rem 0.5rem;
      border-radius: var(--radius);
      color: var(--gray-600);
      text-decoration: none;
      transition: var(--transition);
      position: relative;
      font-weight: 500;
    }

    .nav-item:hover {
      background: var(--gray-100);
      color: var(--primary);
    }

    .nav-item.active {
      background: var(--primary-lightest);
      color: var(--primary);
    }

    .nav-item.active::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 3px;
      background: var(--primary);
      border-radius: 0 var(--radius) var(--radius) 0;
    }

    .nav-icon {
      width: 1.25rem;
      height: 1.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .nav-badge {
      margin-left: auto;
      padding: 0.125rem 0.375rem;
      background: var(--danger);
      color: white;
      font-size: 0.75rem;
      font-weight: 600;
      border-radius: 999px;
    }

    .sidebar-footer {
      padding: 1rem;
      border-top: 1px solid var(--gray-200);
    }

    .user-profile {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: 0.75rem;
      background: var(--gray-50);
      border-radius: var(--radius);
      margin-bottom: 0.75rem;
    }

    .user-avatar {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      background: linear-gradient(135deg, var(--primary), var(--accent));
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-weight: 700;
    }

    .user-info {
      flex: 1;
      min-width: 0;
    }

    .user-name {
      font-weight: 600;
      color: var(--gray-900);
      font-size: 0.875rem;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .user-role {
      font-size: 0.75rem;
      color: var(--gray-500);
    }

    /* Main Content Area */
    .main-content {
      flex: 1;
      margin-left: 260px;
      display: flex;
      flex-direction: column;
    }

    /* Top Bar */
    .topbar {
      background: var(--white);
      border-bottom: 1px solid var(--gray-200);
      padding: 1rem 2rem;
      display: flex;
      align-items: center;
      gap: 1rem;
      position: sticky;
      top: 0;
      z-index: 5;
    }

    .search-box {
      flex: 1;
      max-width: 400px;
      position: relative;
    }

    .search-box input {
      width: 100%;
      padding: 0.625rem 1rem 0.625rem 2.5rem;
      border: 1px solid var(--gray-300);
      border-radius: var(--radius-lg);
      font-size: 0.875rem;
      transition: var(--transition);
    }

    .search-box input:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(11, 79, 179, 0.1);
    }

    .search-icon {
      position: absolute;
      left: 0.875rem;
      top: 50%;
      transform: translateY(-50%);
      color: var(--gray-400);
    }

    .topbar-actions {
      margin-left: auto;
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .topbar-btn {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: var(--radius);
      border: 1px solid var(--gray-200);
      background: var(--white);
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: var(--transition);
      position: relative;
    }

    .topbar-btn:hover {
      background: var(--gray-50);
      border-color: var(--gray-300);
    }

    .notification-badge {
      position: absolute;
      top: -0.25rem;
      right: -0.25rem;
      width: 0.5rem;
      height: 0.5rem;
      background: var(--danger);
      border-radius: 50%;
      border: 2px solid var(--white);
    }

    .btn-signout {
      padding: 0.625rem 1.25rem;
      background: var(--danger);
      color: white;
      border: none;
      border-radius: var(--radius);
      font-weight: 600;
      cursor: pointer;
      transition: var(--transition);
    }

    .btn-signout:hover {
      background: #ef4444;
      transform: translateY(-1px);
    }

    /* Dashboard Content */
    .dashboard-content {
      padding: 2rem;
      overflow-y: auto;
    }

    /* Welcome Section */
    .welcome-section {
      margin-bottom: 2rem;
    }

    .welcome-card {
      background: linear-gradient(135deg, var(--primary), var(--primary-dark));
      border-radius: var(--radius-2xl);
      padding: 2rem;
      color: white;
      position: relative;
      overflow: hidden;
    }

    .welcome-card::before {
      content: '';
      position: absolute;
      top: -50%;
      right: -10%;
      width: 40%;
      height: 200%;
      background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
      transform: rotate(45deg);
    }

    .welcome-content {
      position: relative;
      z-index: 1;
      display: flex;
      align-items: center;
      gap: 2rem;
    }

    .welcome-avatar {
      width: 5rem;
      height: 5rem;
      border-radius: 50%;
      background: rgba(255,255,255,0.2);
      border: 3px solid rgba(255,255,255,0.3);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
      font-weight: 700;
    }

    .welcome-text h1 {
      font-size: 1.875rem;
      font-weight: 700;
      margin-bottom: 0.25rem;
      font-family: var(--font-display);
    }

    .welcome-subtitle {
      font-size: 1rem;
      opacity: 0.9;
    }

    .compliance-badge {
      margin-left: auto;
      text-align: center;
      background: rgba(255,255,255,0.1);
      padding: 1rem 1.5rem;
      border-radius: var(--radius-xl);
      backdrop-filter: blur(10px);
    }

    .compliance-value {
      font-size: 2.5rem;
      font-weight: 800;
      font-family: var(--font-display);
    }

    .compliance-label {
      font-size: 0.875rem;
      opacity: 0.9;
    }

    /* Quick Actions */
    .quick-actions {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .action-card {
      background: var(--white);
      border-radius: var(--radius-xl);
      padding: 1.5rem;
      text-align: center;
      text-decoration: none;
      transition: var(--transition);
      border: 1px solid var(--gray-200);
      position: relative;
      overflow: hidden;
    }

    .action-card:hover {
      transform: translateY(-0.25rem);
      box-shadow: var(--shadow-lg);
      border-color: var(--primary);
    }

    .action-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(90deg, var(--primary), var(--accent));
      transform: scaleX(0);
      transition: transform 0.3s ease;
    }

    .action-card:hover::before {
      transform: scaleX(1);
    }

    .action-icon {
      width: 3rem;
      height: 3rem;
      margin: 0 auto 1rem;
      background: var(--primary-lightest);
      border-radius: var(--radius-lg);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
    }

    .action-card.scans .action-icon { background: linear-gradient(135deg, #a78bfa, #8b5cf6); color: white; }
    .action-card.training .action-icon { background: linear-gradient(135deg, #60a5fa, #3b82f6); color: white; }
    .action-card.holidays .action-icon { background: linear-gradient(135deg, #34d399, #10b981); color: white; }
    .action-card.quiz .action-icon { background: linear-gradient(135deg, #fbbf24, #f59e0b); color: white; }

    .action-title {
      font-weight: 600;
      color: var(--gray-900);
      font-size: 0.9375rem;
    }

    .action-desc {
      font-size: 0.75rem;
      color: var(--gray-500);
      margin-top: 0.25rem;
    }

    .action-card.disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    .action-card.disabled:hover {
      transform: none;
      box-shadow: none;
      border-color: var(--gray-200);
    }

    /* Dashboard Grid */
    .dashboard-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 1.5rem;
    }

    .dashboard-card {
      background: var(--white);
      border-radius: var(--radius-xl);
      border: 1px solid var(--gray-200);
      overflow: hidden;
    }

    .dashboard-card-header {
      padding: 1.25rem;
      border-bottom: 1px solid var(--gray-100);
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }

    .card-icon {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: var(--radius);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.25rem;
    }

    .card-title {
      font-weight: 600;
      color: var(--gray-900);
      font-size: 1rem;
    }

    .card-badge {
      margin-left: auto;
      padding: 0.25rem 0.5rem;
      background: var(--primary-lightest);
      color: var(--primary);
      font-size: 0.75rem;
      font-weight: 600;
      border-radius: var(--radius);
    }

    .dashboard-card-content {
      padding: 1.25rem;
    }

    /* My Dashboard Card */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }

    .stat-box {
      background: var(--gray-50);
      border-radius: var(--radius);
      padding: 1rem;
      text-align: center;
    }

    .stat-icon {
      width: 2rem;
      height: 2rem;
      margin: 0 auto 0.5rem;
      border-radius: var(--radius-sm);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1rem;
    }

    .stat-value {
      font-size: 1.5rem;
      font-weight: 700;
      color: var(--gray-900);
      font-family: var(--font-display);
    }

    .stat-label {
      font-size: 0.75rem;
      color: var(--gray-500);
      margin-top: 0.25rem;
    }

    /* Activity Timeline */
    .activity-list {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .activity-item {
      display: flex;
      gap: 0.75rem;
      padding: 0.75rem;
      background: var(--gray-50);
      border-radius: var(--radius);
      transition: var(--transition);
    }

    .activity-item:hover {
      background: var(--gray-100);
    }

    .activity-icon {
      width: 2rem;
      height: 2rem;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      font-size: 0.875rem;
    }

    .activity-content {
      flex: 1;
      min-width: 0;
    }

    .activity-title {
      font-size: 0.875rem;
      font-weight: 500;
      color: var(--gray-900);
      margin-bottom: 0.125rem;
    }

    .activity-time {
      font-size: 0.75rem;
      color: var(--gray-500);
    }

    /* Alerts */
    .alert {
      padding: 1rem;
      border-radius: var(--radius);
      margin-bottom: 0.75rem;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      background: var(--warning-light);
      border: 1px solid #fbbf24;
      color: #92400e;
    }

    .alert-icon {
      font-size: 1.25rem;
    }

    .alert-text {
      flex: 1;
    }

    .alert-title {
      font-weight: 600;
      margin-bottom: 0.125rem;
    }

    .alert-desc {
      font-size: 0.875rem;
    }

    /* Mobile Responsive */
    .mobile-menu-btn {
      display: none;
      background: none;
      border: none;
      font-size: 1.5rem;
      color: var(--gray-600);
      cursor: pointer;
    }

    @media (max-width: 1024px) {
      .dashboard-grid {
        grid-template-columns: 1fr;
      }
    }

    @media (max-width: 768px) {
      .sidebar {
        transform: translateX(-100%);
      }

      .sidebar.open {
        transform: translateX(0);
      }

      .main-content {
        margin-left: 0;
      }

      .mobile-menu-btn {
        display: block;
      }

      .welcome-content {
        flex-direction: column;
        text-align: center;
      }

      .compliance-badge {
        margin-left: 0;
        margin-top: 1rem;
      }

      .quick-actions {
        grid-template-columns: repeat(2, 1fr);
      }

      .dashboard-content {
        padding: 1rem;
      }
    }

    /* Animations */
    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateY(1rem);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .dashboard-card {
      animation: slideIn 0.4s ease-out;
    }

    .activity-item {
      animation: slideIn 0.3s ease-out;
    }

    /* Help Button */
    .help-btn {
      position: fixed;
      bottom: 2rem;
      right: 2rem;
      width: 3.5rem;
      height: 3.5rem;
      background: var(--primary);
      color: white;
      border: none;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
      cursor: pointer;
      box-shadow: var(--shadow-xl);
      transition: var(--transition);
      z-index: 100;
    }

    .help-btn:hover {
      background: var(--primary-dark);
      transform: translateY(-0.25rem);
      box-shadow: var(--shadow-2xl);
    }
  </style>
</head>
<body>
  <div class="dashboard-container">
    <!-- Sidebar -->
    <aside class="sidebar" id="sidebar">
      <div class="sidebar-header">
        <a href="#" class="logo">
          <div class="logo-icon">✓</div>
          <span class="logo-text">CheckLoop</span>
        </a>
      </div>

      <nav class="sidebar-nav">
        <div class="nav-section">
          <div class="nav-section-title">Main</div>
          <a href="#" class="nav-item active" data-page="home">
            <span class="nav-icon">🏠</span>
            <span>Dashboard</span>
          </a>
          <a href="staff-scans.html" class="nav-item" data-page="scans">
            <span class="nav-icon">📋</span>
            <span>My Scans</span>
          </a>
          <a href="staff-training.html" class="nav-item" data-page="training">
            <span class="nav-icon">🎓</span>
            <span>Training</span>
          </a>
          <a href="#" class="nav-item disabled" data-page="holidays">
            <span class="nav-icon">🏖️</span>
            <span>My Holidays</span>
            <span class="nav-badge" style="background: var(--warning); font-size: 0.625rem;">Soon</span>
          </a>
          <a href="staff-quiz.html" class="nav-item" data-page="quiz">
            <span class="nav-icon">🧩</span>
            <span>Quiz</span>
            <span class="nav-badge" id="quiz-nav-badge" style="display: none;">!</span>
          </a>
        </div>

        <div class="nav-section">
          <div class="nav-section-title">More</div>
          <a href="staff-achievements.html" class="nav-item" data-page="achievements">
            <span class="nav-icon">🏆</span>
            <span>Achievements</span>
          </a>
          <a href="staff-help.html" class="nav-item" data-page="help">
            <span class="nav-icon">❓</span>
            <span>Help & Support</span>
          </a>
        </div>
      </nav>

      <div class="sidebar-footer">
        <div class="user-profile">
          <div class="user-avatar" id="user-avatar-sidebar">?</div>
          <div class="user-info">
            <div class="user-name" id="user-name-sidebar">Loading...</div>
            <div class="user-role" id="user-role-sidebar">Staff</div>
          </div>
        </div>
      </div>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
      <!-- Top Bar -->
      <header class="topbar">
        <button class="mobile-menu-btn" onclick="toggleSidebar()">☰</button>

        <div class="search-box">
          <span class="search-icon">🔍</span>
          <input type="text" placeholder="Search...">
        </div>

        <div class="topbar-actions">
          <button class="topbar-btn">
            <span>🔔</span>
            <span class="notification-badge"></span>
          </button>
          <button class="topbar-btn">
            <span>⚙️</span>
          </button>
          <button class="btn-signout" id="logout-btn" title="Sign Out">Sign Out</button>
        </div>
      </header>

      <!-- Dashboard Content -->
      <div class="dashboard-content">
        <!-- Welcome Section -->
        <div class="welcome-section">
          <div class="welcome-card">
            <div class="welcome-content">
              <div class="welcome-avatar" id="welcome-avatar">?</div>
              <div class="welcome-text">
                <h1 id="welcome-message">Welcome back!</h1>
                <p class="welcome-subtitle" id="welcome-subtitle">Let's check your progress today</p>
              </div>
              <div class="compliance-badge">
                <div class="compliance-value" id="compliance-value">0%</div>
                <div class="compliance-label">Training Compliance</div>
              </div>
            </div>
          </div>
        </div>

        <!-- Quiz Alert -->
        <div id="quiz-alert" class="alert" style="display: none;">
          <div class="alert-icon">📝</div>
          <div class="alert-text">
            <div class="alert-title">Weekly Quiz Due!</div>
            <div class="alert-desc" id="quiz-alert-message">Complete your required knowledge check</div>
          </div>
          <a href="staff-quiz.html" style="padding: 0.5rem 1rem; background: var(--warning); color: white; border-radius: var(--radius); text-decoration: none; font-weight: 600;">Take Quiz</a>
        </div>

        <!-- Quick Actions -->
        <div class="quick-actions">
          <a href="staff-scans.html" class="action-card scans">
            <div class="action-icon">📋</div>
            <div class="action-title">My Scans</div>
            <div class="action-desc">View scan history</div>
          </a>
          <a href="staff-training.html" class="action-card training">
            <div class="action-icon">🎓</div>
            <div class="action-title">Training</div>
            <div class="action-desc">Manage certificates</div>
          </a>
          <div class="action-card holidays disabled" id="holidays-card">
            <div class="action-icon">🏖️</div>
            <div class="action-title">My Holidays</div>
            <div class="action-desc">Coming soon</div>
          </div>
          <a href="staff-quiz.html" class="action-card quiz">
            <div class="action-icon">🧩</div>
            <div class="action-title">Quiz</div>
            <div class="action-desc">Test knowledge</div>
          </a>
        </div>

        <!-- Dashboard Grid -->
        <div class="dashboard-grid">
          <!-- My Dashboard Card -->
          <div class="dashboard-card">
            <div class="dashboard-card-header">
              <div class="card-icon" style="background: linear-gradient(135deg, #667eea, #764ba2); color: white;">📊</div>
              <div class="card-title">My Dashboard</div>
            </div>
            <div class="dashboard-card-content">
              <div class="stats-grid">
                <div class="stat-box">
                  <div class="stat-icon" style="background: linear-gradient(135deg, #60a5fa, #3b82f6); color: white;">🎓</div>
                  <div class="stat-value" id="training-valid">0</div>
                  <div class="stat-label">Training Valid</div>
                </div>
                <div class="stat-box">
                  <div class="stat-icon" style="background: linear-gradient(135deg, #fbbf24, #f59e0b); color: white;">⏰</div>
                  <div class="stat-value" id="training-due">0</div>
                  <div class="stat-label">Due Soon</div>
                </div>
                <div class="stat-box">
                  <div class="stat-icon" style="background: linear-gradient(135deg, #34d399, #10b981); color: white;">✅</div>
                  <div class="stat-value" id="quiz-score">--</div>
                  <div class="stat-label">Last Quiz</div>
                </div>
                <div class="stat-box">
                  <div class="stat-icon" style="background: linear-gradient(135deg, #a78bfa, #8b5cf6); color: white;">📅</div>
                  <div class="stat-value" id="holiday-remaining">--</div>
                  <div class="stat-label">Holiday Days</div>
                </div>
              </div>
            </div>
          </div>

          <!-- Recent Activity Card -->
          <div class="dashboard-card">
            <div class="dashboard-card-header">
              <div class="card-icon" style="background: linear-gradient(135deg, #ec4899, #db2777); color: white;">⏰</div>
              <div class="card-title">Recent Activity</div>
              <span class="card-badge">Today</span>
            </div>
            <div class="dashboard-card-content">
              <div class="activity-list" id="activity-list">
                <div class="activity-item">
                  <div class="activity-icon" style="background: var(--primary-lightest); color: var(--primary);">⏳</div>
                  <div class="activity-content">
                    <div class="activity-title">Loading activities...</div>
                    <div class="activity-time">Please wait</div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Alerts Card -->
          <div class="dashboard-card">
            <div class="dashboard-card-header">
              <div class="card-icon" style="background: linear-gradient(135deg, #f59e0b, #d97706); color: white;">🔔</div>
              <div class="card-title">My Alerts</div>
            </div>
            <div class="dashboard-card-content" id="alerts-container">
              <div class="activity-item">
                <div class="activity-icon" style="background: var(--success-light); color: var(--success);">✅</div>
                <div class="activity-content">
                  <div class="activity-title">All caught up!</div>
                  <div class="activity-time">No alerts at this time</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>

  <!-- Help Button -->
  <button class="help-btn" id="help-tour-btn" title="Take a guided tour">
    ?
  </button>

  <!-- Scripts -->
  <script type="module">
    import { createClient } from "https://esm.sh/@supabase/supabase-js@2";

    // Initialize Supabase
    const supabase = createClient(CONFIG.SUPABASE_URL, CONFIG.SUPABASE_ANON_KEY, {
      auth: {
        persistSession: true,
        autoRefreshToken: true,
        detectSessionInUrl: true,
        flowType: 'pkce'
      }
    });

    // Make supabase available globally
    window.supabase = supabase;

    // Toggle sidebar for mobile
    window.toggleSidebar = function() {
      const sidebar = document.getElementById('sidebar');
      sidebar.classList.toggle('open');
    };

    // Check authentication and load dashboard
    async function initializeDashboard() {
      try {
        const { data: { session } } = await supabase.auth.getSession();

        if (!session) {
          window.location.replace('home.html');
          return;
        }

        // Get user profile
        const { data: profile } = await supabase
          .from('master_users')
          .select('*')
          .eq('auth_user_id', session.user.id)
          .maybeSingle();

        // Update UI with user info
        const userName = profile?.full_name || profile?.nickname || session.user.email?.split('@')[0] || 'User';
        const userInitial = userName.charAt(0).toUpperCase();

        document.getElementById('user-name-sidebar').textContent = userName;
        document.getElementById('user-avatar-sidebar').textContent = userInitial;
        document.getElementById('welcome-avatar').textContent = userInitial;
        document.getElementById('welcome-message').textContent = `Welcome back, ${userName}!`;

        // Set role
        const role = profile?.role || profile?.access_type || 'Staff';
        document.getElementById('user-role-sidebar').textContent = role;

        // Load dashboard data
        await loadDashboardData(session.user, profile);

        // Check holiday approval
        if (profile?.holiday_approved === true) {
          const holidayCard = document.getElementById('holidays-card');
          if (holidayCard) {
            holidayCard.classList.remove('disabled');
            holidayCard.onclick = () => window.location.href = 'my-holidays.html';
            holidayCard.querySelector('.action-desc').textContent = 'View and request';
          }
        }

        // Check for quiz due
        if (profile?.next_quiz_due) {
          const nextDue = new Date(profile.next_quiz_due);
          const now = new Date();

          if (now >= nextDue) {
            document.getElementById('quiz-alert').style.display = 'flex';
            document.getElementById('quiz-nav-badge').style.display = 'inline-block';

            // Calculate days overdue
            const daysOverdue = Math.floor((now - nextDue) / (1000 * 60 * 60 * 24));
            if (daysOverdue > 0) {
              document.getElementById('quiz-alert-message').textContent = `Quiz overdue by ${daysOverdue} day${daysOverdue !== 1 ? 's' : ''}!`;
            }
          }
        }

      } catch (error) {
        console.error('Error initializing dashboard:', error);
      }
    }

    async function loadDashboardData(user, profile) {
      const siteId = profile?.site_id;

      // Load training data
      try {
        const { data: trainingTypes } = await supabase
          .from('training_types')
          .select('id, validity_months')
          .eq('site_id', siteId)
          .eq('active', true);

        const { data: trainingRecords } = await supabase
          .from('training_records')
          .select('*')
          .eq('user_id', user.id);

        const now = new Date();
        let validCount = 0;
        let dueCount = 0;

        if (trainingTypes && trainingRecords) {
          trainingTypes.forEach(type => {
            const record = trainingRecords.find(r => r.training_type_id === type.id);
            if (record && record.completed_date) {
              const completedDate = new Date(record.completed_date);
              const expiryDate = new Date(completedDate);
              expiryDate.setMonth(expiryDate.getMonth() + (type.validity_months || 12));

              if (expiryDate > now) {
                const daysUntilExpiry = Math.ceil((expiryDate - now) / (1000 * 60 * 60 * 24));
                if (daysUntilExpiry <= 30) {
                  dueCount++;
                } else {
                  validCount++;
                }
              }
            }
          });
        }

        document.getElementById('training-valid').textContent = validCount;
        document.getElementById('training-due').textContent = dueCount;

        // Calculate compliance percentage
        const total = trainingTypes?.length || 0;
        const percent = total > 0 ? Math.round((validCount / total) * 100) : 0;
        document.getElementById('compliance-value').textContent = `${percent}%`;

      } catch (error) {
        console.error('Error loading training data:', error);
      }

      // Load quiz data
      try {
        const { data: quizData } = await supabase
          .from('quiz_practices')
          .select('score_percent')
          .eq('user_id', user.id)
          .order('completed_at', { ascending: false })
          .limit(1)
          .maybeSingle();

        if (quizData) {
          document.getElementById('quiz-score').textContent = `${quizData.score_percent}%`;
        }
      } catch (error) {
        console.error('Error loading quiz data:', error);
      }

      // Load holiday data
      try {
        const { data: userData } = await supabase
          .from('master_users')
          .select('holiday_approved, holiday_entitlement')
          .eq('auth_user_id', user.id)
          .single();

        if (userData?.holiday_approved === true) {
          const entitlement = userData.holiday_entitlement || 28;

          const { data: holidays } = await supabase
            .from('4_holiday_requests')
            .select('start_date, end_date')
            .eq('user_id', user.id)
            .eq('status', 'approved');

          let usedDays = 0;
          if (holidays) {
            holidays.forEach(h => {
              const start = new Date(h.start_date);
              const end = new Date(h.end_date);
              const days = Math.ceil((end - start) / (1000 * 60 * 60 * 24)) + 1;
              usedDays += days;
            });
          }

          document.getElementById('holiday-remaining').textContent = Math.max(0, entitlement - usedDays);
        }
      } catch (error) {
        console.error('Error loading holiday data:', error);
      }

      // Load recent activity
      try {
        const { data: scans } = await supabase
          .from('user_scans')
          .select('*, scan_types(name)')
          .eq('user_id', user.id)
          .order('created_at', { ascending: false })
          .limit(5);

        const activityList = document.getElementById('activity-list');

        if (scans && scans.length > 0) {
          activityList.innerHTML = scans.map(scan => {
            const time = new Date(scan.created_at);
            const timeStr = time.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });
            const icon = scan.status === 'pass' ? '✅' : '⚠️';
            const bgColor = scan.status === 'pass' ? 'var(--success-light)' : 'var(--warning-light)';
            const color = scan.status === 'pass' ? 'var(--success)' : 'var(--warning)';

            return `
              <div class="activity-item">
                <div class="activity-icon" style="background: ${bgColor}; color: ${color};">${icon}</div>
                <div class="activity-content">
                  <div class="activity-title">${scan.scan_types?.name || 'Scan'} completed</div>
                  <div class="activity-time">${timeStr}</div>
                </div>
              </div>
            `;
          }).join('');
        } else {
          activityList.innerHTML = `
            <div class="activity-item">
              <div class="activity-icon" style="background: var(--gray-100); color: var(--gray-500);">📋</div>
              <div class="activity-content">
                <div class="activity-title">No recent activity</div>
                <div class="activity-time">Start by completing a scan</div>
              </div>
            </div>
          `;
        }
      } catch (error) {
        console.error('Error loading activity:', error);
      }

      // Load alerts
      await loadAlerts(user, profile);
    }

    async function loadAlerts(user, profile) {
      const alertsContainer = document.getElementById('alerts-container');
      const alerts = [];

      try {
        // Check for overdue training
        const { data: trainingData } = await supabase
          .from('training_records')
          .select(`
            training_type_id,
            completed_date,
            training_types (name, valid_for_months)
          `)
          .eq('user_id', user.id);

        if (trainingData) {
          const now = new Date();
          trainingData.forEach(record => {
            if (record.training_types && record.completed_date) {
              const completedDate = new Date(record.completed_date);
              const validMonths = record.training_types.valid_for_months || 12;
              const expiryDate = new Date(completedDate);
              expiryDate.setMonth(expiryDate.getMonth() + validMonths);

              const daysUntilExpiry = Math.ceil((expiryDate - now) / (1000 * 60 * 60 * 24));

              if (daysUntilExpiry <= 0) {
                alerts.push({
                  icon: '⚠️',
                  title: `${record.training_types.name} Overdue`,
                  desc: `Expired ${Math.abs(daysUntilExpiry)} days ago`,
                  color: 'var(--danger)'
                });
              } else if (daysUntilExpiry <= 30) {
                alerts.push({
                  icon: '📅',
                  title: `${record.training_types.name} Due Soon`,
                  desc: `Expires in ${daysUntilExpiry} days`,
                  color: 'var(--warning)'
                });
              }
            }
          });
        }

        if (alerts.length === 0) {
          alertsContainer.innerHTML = `
            <div class="activity-item">
              <div class="activity-icon" style="background: var(--success-light); color: var(--success);">✅</div>
              <div class="activity-content">
                <div class="activity-title">All caught up!</div>
                <div class="activity-time">No alerts at this time</div>
              </div>
            </div>
          `;
        } else {
          alertsContainer.innerHTML = alerts.map(alert => `
            <div class="activity-item">
              <div class="activity-icon" style="background: ${alert.color}20; color: ${alert.color};">${alert.icon}</div>
              <div class="activity-content">
                <div class="activity-title">${alert.title}</div>
                <div class="activity-time">${alert.desc}</div>
              </div>
            </div>
          `).join('');
        }

      } catch (error) {
        console.error('Error loading alerts:', error);
      }
    }

    // Sign out handler
    document.getElementById('logout-btn').addEventListener('click', async () => {
      try {
        if (window.signOut) return window.signOut();
        await supabase.auth.signOut();
        window.location.replace('home.html');
      } catch (error) {
        console.error('Error signing out:', error);
      }
    });

    // Initialize dashboard
    initializeDashboard();

    // Help tour button
    document.getElementById('help-tour-btn').addEventListener('click', () => {
      alert('Welcome to the help tour! This feature will guide you through the dashboard.');
    });
  </script>
</body>
</html>
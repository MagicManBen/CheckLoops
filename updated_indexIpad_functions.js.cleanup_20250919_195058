// Updated tryPin function for indexIpad.html
// This should replace the existing tryPin function

async function tryPin(p) {
  $('pinMsg').textContent = 'Checkingâ€¦';
  try {
    const { data, error } = await sb
      .rpc('authenticate_kiosk_user_with_profiles', {
        p_site_id: S.siteId,
        p_pin: p
      });
    if (error) { $('pinMsg').textContent = error.message; await glowPinError(500); pin=''; pinDots(0); return; }
    if (!data || !data.length) { $('pinMsg').textContent = 'Invalid PIN'; await glowPinError(500); pin=''; pinDots(0); return; }

    S.staff = { name: data[0].full_name, role: data[0].role || 'staff' };
    $('footerWho').textContent = S.staff.name;
    $('pinMsg').textContent = '';
    // Flash bright green, show welcome popup, then navigate
    await glowPinSuccess(2000);
    pin = '';
    pinDots(0);
    // glowPinSuccess will navigate after showing the welcome popup
  } catch (e) {
    $('pinMsg').textContent = e.message || String(e);
    await glowPinError(500);
    pin=''; pinDots(0);
  }
}

// Updated PIN setup code for indexIpad.html
// This should replace the existing PIN setup code

async function populateKioskUsers() {
  const selectEl = $('pinSetupUser');
  selectEl.innerHTML = '<option value="">Select Staff Member...</option>';
  if (!S.siteId) {
      $('pinSetupMsg').textContent = 'Error: Site not loaded.';
      return;
  }
  
  // Now we get the profiles with kiosk_user_id
  const { data: users, error } = await readClient()
      .from('master_users')
      .select('kiosk_auth_user_id, full_name')
      .eq('site_id', S.siteId)
      .not('kiosk_user_id', 'is', null)
      .order('full_name');
  
  if (error) {
      $('pinSetupMsg').textContent = 'Could not load staff list.';
      return;
  }
  
  if (users && users.length > 0) {
      users.forEach(user => {
          const option = document.createElement('option');
          option.value = user.kiosk_user_id;
          option.textContent = user.full_name;
          selectEl.appendChild(option);
      });
  } else {
      $('pinSetupMsg').textContent = 'No kiosk users found for this site.';
  }
}

$('btnPinSetupSave').addEventListener('click', async () => {
  const msgEl = $('pinSetupMsg');
  msgEl.textContent = 'Saving...';
  const kioskUserId = $('pinSetupUser').value;
  const newPin = $('pinSetupNew').value;
  const confirmPin = $('pinSetupConfirm').value;

  if (!kioskUserId) {
      msgEl.textContent = 'Please select a staff member.';
      return;
  }
  if (!/^\d{4}$/.test(newPin)) {
      msgEl.textContent = 'PIN must be exactly 4 digits.';
      return;
  }
  if (newPin !== confirmPin) {
      msgEl.textContent = 'PINs do not match.';
      return;
  }

  // First get the user_id for this kiosk_user_id
  const { data: userData, error: userError } = await sb
      .from('master_users')
      .select('auth_user_id')
      .eq('kiosk_user_id', kioskUserId)
      .eq('site_id', S.siteId)
      .single();

  if (userError) {
      msgEl.textContent = `Error: ${userError.message}`;
      return;
  }

  const { error } = await sb
      .rpc('set_profile_pin', {
          p_user_id: userData.user_id,
          p_site_id: S.siteId,
          p_pin: newPin
      });

  if (error) {
      msgEl.textContent = `Error: ${error.message}`;
  } else {
      msgEl.textContent = 'PIN updated successfully!';
      toast('PIN Saved!');
      setTimeout(() => {
          $('pinSetupUser').selectedIndex = 0;
          $('pinSetupNew').value = '';
          $('pinSetupConfirm').value = '';
          msgEl.textContent = '';
          show('screen-pin');
      }, 1500);
  }
});
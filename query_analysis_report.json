{
  "timestamp": "2025-09-18T06:42:57.430Z",
  "filesAnalyzed": 51,
  "queryPatterns": {
    "profiles": [
      {
        "file": "test_supabase_connection.html",
        "count": 2,
        "samples": [
          "from('profiles')\n                        .select('role, full_name')\n                        .eq('user_id', data.user.id)\n                        .maybeSingle()",
          "from('profiles')\n            .select('count')\n            .limit(1)\n            .then(({ data, error }) => {\n                if (error) {\n                    log(`<span style=\"color:red\">Database connection error: ${error.message}</span>`)"
        ]
      },
      {
        "file": "staff_pro_fixed.html",
        "count": 2,
        "samples": [
          "from('profiles').select('nickname').eq('user_id', user.id).maybeSingle()",
          "from('profiles').select('avatar_url').eq('user_id', user.id).maybeSingle()"
        ]
      },
      {
        "file": "staff_pro.html",
        "count": 2,
        "samples": [
          "from('profiles').select('nickname').eq('user_id', user.id).maybeSingle()",
          "from('profiles').select('avatar_url').eq('user_id', user.id).maybeSingle()"
        ]
      },
      {
        "file": "staff.html",
        "count": 2,
        "samples": [
          "from('profiles').select('nickname').eq('user_id', user.id).maybeSingle()",
          "from('profiles').select('avatar_url').eq('user_id', user.id).maybeSingle()"
        ]
      },
      {
        "file": "staff-welcome.html",
        "count": 9,
        "samples": [
          "from('profiles')\n                .select('nickname, role_detail, team_id, team_name, avatar_url')\n                .eq('user_id', user.id)\n                .maybeSingle()",
          "from('profiles').upsert(profileData)"
        ]
      },
      {
        "file": "staff-welcome-current-backup.html",
        "count": 11,
        "samples": [
          "from('profiles').select('nickname').eq('user_id', user.id).maybeSingle()",
          "from('profiles').update({ nickname: val }).eq('user_id', user.id)"
        ]
      },
      {
        "file": "staff-welcome-Old.html",
        "count": 6,
        "samples": [
          "from('profiles')\n                .select('nickname, role_detail, team_id, team_name, avatar_url')\n                .eq('user_id', user.id)\n                .maybeSingle()",
          "from('profiles')\n            .select(selCols.join(','))\n            .eq('user_id', user.id)\n            .maybeSingle()"
        ]
      },
      {
        "file": "staff-training.html",
        "count": 1,
        "samples": [
          "from('profiles')\n                        .select('kiosk_user_id')\n                        .eq('user_id', globalUser.id)\n                        .single()"
        ]
      },
      {
        "file": "staff-quiz.html",
        "count": 2,
        "samples": [
          "from('profiles')\n                    .select('*')\n                    .eq('user_id', currentUser.id)\n                    .single()",
          "from('profiles')\n            .update({ next_quiz_due: nextDue.toISOString() })\n            .eq('user_id', currentUser.id)"
        ]
      },
      {
        "file": "staff-meetings 5.html",
        "count": 1,
        "samples": [
          "from('profiles').select('full_name,email').eq('site_id', siteId)"
        ]
      },
      {
        "file": "simple-set-password.html",
        "count": 1,
        "samples": [
          "from('profiles')\n              .upsert({\n                user_id: user.id,\n                full_name: fullName || user.email,\n                role: role || 'staff',\n                site_id: parseInt(siteId),\n                nickname: fullName ? fullName.split(' ')[0] : user.email.split('@')[0]\n              }, { onConflict: 'user_id' })"
        ]
      },
      {
        "file": "signup.html",
        "count": 1,
        "samples": [
          "from('profiles')\n        .insert({\n          user_id: authData.user.id,\n          full_name: `${firstName} ${lastName}`,\n          site_id: siteData.id,\n          role: 'owner'\n        })"
        ]
      },
      {
        "file": "run_migration.html",
        "count": 1,
        "samples": [
          "from('profiles')\n          .select('user_id, avatar_url')\n          .limit(1)"
        ]
      },
      {
        "file": "indexIpad_fixed.html",
        "count": 1,
        "samples": [
          "from('profiles').select('site_id, full_name, role').eq('user_id', session.user.id).limit(1)"
        ]
      },
      {
        "file": "indexIpad.html",
        "count": 5,
        "samples": [
          "from('profiles').select('site_id, full_name, role').eq('user_id', session.user.id).limit(1)",
          "from('profiles')\n          .select('user_id, kiosk_user_id, full_name, site_id')\n          .eq('user_id', S.user.id)\n          .eq('site_id', S.siteId)\n          .single()"
        ]
      },
      {
        "file": "home.html",
        "count": 6,
        "samples": [
          "from('profiles')\n        .select('role')\n        .eq('user_id', theUser.id)\n        .maybeSingle()",
          "from('profiles')\n        .select('full_name, nickname')\n        .eq('user_id', theUser.id)\n        .single()"
        ]
      },
      {
        "file": "fix_admin_role.html",
        "count": 2,
        "samples": [
          "from('profiles')\n                    .update({ role: 'admin' })\n                    .eq('user_id', userId)\n                    .select()",
          "from('profiles')\n                        .select('role, full_name')\n                        .eq('user_id', userId)"
        ]
      },
      {
        "file": "complaints.html",
        "count": 1,
        "samples": [
          "from(\"profiles\")\n                .select(\"site_id, role, full_name\")\n                .eq(\"user_id\", user.id)\n                .maybeSingle()"
        ]
      },
      {
        "file": "check_user_role.html",
        "count": 1,
        "samples": [
          "from('profiles')\n                            .select('*')\n                            .eq('user_id', user.id)"
        ]
      },
      {
        "file": "check_exact_role.html",
        "count": 1,
        "samples": [
          "from('profiles')\n                .select('*')\n                .eq('user_id', authData.user.id)\n                .single()"
        ]
      },
      {
        "file": "check-user-data.html",
        "count": 1,
        "samples": [
          "from('profiles')\n                    .select('*')\n                    .eq('user_id', user.id)"
        ]
      },
      {
        "file": "admin-login.html",
        "count": 2,
        "samples": [
          "from('profiles')\n            .select('role')\n            .eq('user_id', user.id)\n            .maybeSingle()",
          "from('profiles')\n          .select('role, onboarding_complete')\n          .eq('user_id', user.id)\n          .maybeSingle()"
        ]
      },
      {
        "file": "admin-dashboard.html",
        "count": 13,
        "samples": [
          "from('profiles')\n            .select('role, full_name')\n            .eq('user_id', session.user.id)\n            .maybeSingle()",
          "from('profiles').select('*').eq('site_id', ctx.site_id),\n        // Get invites\n        supabase.from('site_invites').select('*').eq('site_id', ctx.site_id),\n        // Get welcome data for job roles and teams\n        supabase.from('staff_app_welcome').select('*').eq('site_id', ctx.site_id)\n      ])"
        ]
      },
      {
        "file": "admin-dashboard 14th.html",
        "count": 11,
        "samples": [
          "from('profiles')\n            .select('role, full_name')\n            .eq('user_id', session.user.id)\n            .maybeSingle()",
          "from('profiles')\n        .select('*')\n        .eq('site_id', ctx.site_id)"
        ]
      },
      {
        "file": "admin-check.html",
        "count": 1,
        "samples": [
          "from('profiles')\n            .select('role')\n            .eq('user_id', session.user.id)\n            .maybeSingle()"
        ]
      },
      {
        "file": "achievements.html",
        "count": 1,
        "samples": [
          "from('profiles').select('avatar_url').eq('user_id', user.id).maybeSingle()"
        ]
      }
    ],
    "kiosk_users": [
      {
        "file": "staff_pro_fixed.html",
        "count": 2,
        "samples": [
          "from('kiosk_users')\n          .select('holiday_approved')\n          .eq('user_id', session.user.id)\n          .single()",
          "from('kiosk_users')\n          .select('holiday_approved')\n          .eq('user_id', session.user.id)\n          .single()"
        ]
      },
      {
        "file": "staff_pro.html",
        "count": 2,
        "samples": [
          "from('kiosk_users')\n          .select('holiday_approved')\n          .eq('user_id', session.user.id)\n          .single()",
          "from('kiosk_users')\n          .select('holiday_approved')\n          .eq('user_id', session.user.id)\n          .single()"
        ]
      },
      {
        "file": "staff.html",
        "count": 2,
        "samples": [
          "from('kiosk_users')\n          .select('holiday_approved')\n          .eq('user_id', session.user.id)\n          .single()",
          "from('kiosk_users')\n          .select('holiday_approved')\n          .eq('user_id', session.user.id)\n          .single()"
        ]
      },
      {
        "file": "staff-welcome-current-backup.html",
        "count": 3,
        "samples": [
          "from('kiosk_users')\n                  .select('id')\n                  .eq('site_id', siteId)\n                  .eq('full_name', fullName)\n                  .maybeSingle()",
          "from('kiosk_users').update({ role, team_id: teamIdNum, team_name: (window.selectedTeamName || null), active: true }).eq('id', kioskId)"
        ]
      },
      {
        "file": "staff-welcome-Old.html",
        "count": 3,
        "samples": [
          "from('kiosk_users')\n                  .select('id')\n                  .eq('site_id', siteId)\n                  .eq('full_name', fullName)\n                  .maybeSingle()",
          "from('kiosk_users').update({ role, team_id: teamIdNum, team_name: (window.selectedTeamName || null), active: true }).eq('id', kioskId)"
        ]
      },
      {
        "file": "setup_holiday_approval.html",
        "count": 5,
        "samples": [
          "from('kiosk_users')\n          .select('user_id, full_name, holiday_approved')\n          .limit(1)",
          "from('kiosk_users')\n          .select('*')\n          .limit(1)"
        ]
      },
      {
        "file": "my-holidays.html",
        "count": 1,
        "samples": [
          "from('kiosk_users')\n          .select('holiday_approved')\n          .eq('user_id', user.id)\n          .single()"
        ]
      },
      {
        "file": "indexIpad_fixed.html",
        "count": 3,
        "samples": [
          "from('kiosk_users')\n          .select('id, full_name, role')\n          .eq('site_id', S.siteId)\n          .eq('pin', p)\n          .limit(1)",
          "from('kiosk_users')\n            .select('id, full_name')\n            .eq('site_id', S.siteId)\n            .order('full_name')"
        ]
      },
      {
        "file": "indexIpad.html",
        "count": 3,
        "samples": [
          "from('kiosk_users')\n          .select('id')\n          .order('id', { ascending: false })\n          .limit(1)",
          "from('kiosk_users')\n          .insert({\n              id: kioskUserId,\n              site_id: S.siteId,\n              full_name: profile.full_name,\n              role: profile.role_detail || profile.role || 'staff',\n              active: profile.active !== false,\n              team_id: profile.team_id,\n              team_name: profile.team_name,\n              reports_to_id: profile.reports_to_id\n          })"
        ]
      },
      {
        "file": "home.html",
        "count": 4,
        "samples": [
          "from('kiosk_users')\n          .select('*')\n          .eq('site_id', invite.site_id)\n          .eq('full_name', invite.full_name)\n          .single()",
          "from('kiosk_users')\n            .insert(kioskUserData)"
        ]
      },
      {
        "file": "complaints.html",
        "count": 1,
        "samples": [
          "from(\"kiosk_users\").select(\"id,full_name\").in(\"id\", creatorIds)"
        ]
      },
      {
        "file": "admin-dashboard.html",
        "count": 12,
        "samples": [
          "from(\"kiosk_users\")\n              .insert({\n                site_id: invitation.site_id,\n                full_name: invitation.full_name,\n                role: invitation.role_detail,\n                active: true,\n                reports_to_id: invitation.reports_to_id\n              })",
          "from(\"kiosk_users\").select(\"id\", { count:\"exact\", head:true }).eq(\"site_id\", ctx.site_id),\n    ])"
        ]
      },
      {
        "file": "admin-dashboard 14th.html",
        "count": 13,
        "samples": [
          "from(\"kiosk_users\")\n              .insert({\n                site_id: invitation.site_id,\n                full_name: invitation.full_name,\n                role: invitation.role_detail,\n                active: true,\n                reports_to_id: invitation.reports_to_id\n              })",
          "from(\"kiosk_users\").select(\"id\", { count:\"exact\", head:true }).eq(\"site_id\", ctx.site_id),\n    ])"
        ]
      }
    ],
    "site_invites": [
      {
        "file": "staff-welcome.html",
        "count": 1,
        "samples": [
          "from('site_invites')\n            .select('metadata')\n            .eq('email', user.email)\n            .eq('site_id', siteIdForCheck)\n            .maybeSingle()"
        ]
      },
      {
        "file": "simple-set-password.html",
        "count": 2,
        "samples": [
          "from('site_invites')\n                .select('*')\n                .eq('id', inviteId)\n                .single()",
          "from('site_invites')\n                  .update({ status: 'accepted' })\n                  .eq('id', inviteId)"
        ]
      },
      {
        "file": "home.html",
        "count": 5,
        "samples": [
          "from('site_invites')\n        .select('*')\n        .eq('token', token)\n        .eq('status', 'pending')\n        .gte('expires_at', new Date().toISOString())\n        .single()",
          "from('site_invites')\n        .select('*')\n        .eq('token', inviteToken)\n        .single()"
        ]
      },
      {
        "file": "check_user_role.html",
        "count": 1,
        "samples": [
          "from('site_invites')\n                            .select('*')\n                            .eq('email', email)"
        ]
      },
      {
        "file": "check-user-data.html",
        "count": 1,
        "samples": [
          "from('site_invites')\n                    .select('*')\n                    .eq('email', user.email)"
        ]
      },
      {
        "file": "admin-login.html",
        "count": 2,
        "samples": [
          "from('site_invites')\n              .select('role, status, site_id')\n              .eq('email', user.email)\n              .in('role', ['admin', 'owner'])\n              .in('status', ['accepted', 'approved'])",
          "from('site_invites')\n            .select('role, status, site_id')\n            .eq('email', user.email)\n            .in('role', ['admin', 'owner'])\n            .in('status', ['accepted', 'approved'])"
        ]
      },
      {
        "file": "admin-dashboard.html",
        "count": 11,
        "samples": [
          "from('site_invites')\n            .select('role')\n            .eq('email', session.user.email)\n            .in('role', ['admin', 'owner'])\n            .maybeSingle()",
          "from('site_invites')\n        .select('id, email')\n        .eq('email', formData.email)\n        .eq('status', 'pending')\n        .limit(1)"
        ]
      },
      {
        "file": "admin-dashboard 14th.html",
        "count": 7,
        "samples": [
          "from('site_invites')\n            .select('role')\n            .eq('email', session.user.email)\n            .in('role', ['admin', 'owner'])\n            .maybeSingle()",
          "from('site_invites')\n        .select('count')\n        .limit(1)"
        ]
      }
    ],
    "other_user_related": []
  },
  "mappings": [
    {
      "old": "supabase.from('profiles').select('*').eq('user_id', userId)",
      "new": "supabase.from('master_users').select('*').eq('auth_user_id', userId)"
    },
    {
      "old": "supabase.from('profiles').select('role, full_name').eq('user_id', userId)",
      "new": "supabase.from('master_users').select('access_type, full_name').eq('auth_user_id', userId)"
    },
    {
      "old": "supabase.from('kiosk_users').select('*').eq('site_id', siteId)",
      "new": "supabase.from('master_users').select('*').eq('site_id', siteId).not('kiosk_user_id', 'is', null)"
    },
    {
      "old": "supabase.from('site_invites').select('*').eq('status', 'pending')",
      "new": "supabase.from('master_users').select('*').eq('invite_status', 'pending')"
    },
    {
      "old": "profile.role === 'admin'",
      "new": "user.access_type === 'admin'"
    },
    {
      "old": "invite.status === 'accepted'",
      "new": "user.invite_status === 'accepted' || user.invite_status === 'active'"
    }
  ],
  "filesToUpdate": [
    "test_supabase_connection.html",
    "staff_pro_fixed.html",
    "staff_pro.html",
    "staff.html",
    "staff-welcome.html",
    "staff-welcome-current-backup.html",
    "staff-welcome-Old.html",
    "staff-training.html",
    "staff-quiz.html",
    "staff-meetings 5.html",
    "simple-set-password.html",
    "signup.html",
    "run_migration.html",
    "indexIpad_fixed.html",
    "indexIpad.html",
    "home.html",
    "fix_admin_role.html",
    "complaints.html",
    "check_user_role.html",
    "check_exact_role.html",
    "check-user-data.html",
    "admin-login.html",
    "admin-dashboard.html",
    "admin-dashboard 14th.html",
    "admin-check.html",
    "achievements.html",
    "setup_holiday_approval.html",
    "my-holidays.html"
  ]
}
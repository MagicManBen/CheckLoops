import { chromium } from 'playwright';
import { createClient } from '@supabase/supabase-js';

async function testCompleteHolidayFlow() {
  // Initialize Supabase client
  const supabaseUrl = 'https://swnkxrvqjsexdqfpptrv.supabase.co';
  const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN3bmt4cnZxanNleGRxZnBwdHJ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzM4NTgxNzAsImV4cCI6MjA0OTQzNDE3MH0.8L4e9vdBbZ5snJxJPvUrPRQBkhtZvoWqKvYwtk-2jT0';
  const supabase = createClient(supabaseUrl, supabaseAnonKey);

  const browser = await chromium.launch({
    headless: false,
    slowMo: 300
  });

  const page = await browser.newPage();

  // Capture console messages
  page.on('console', msg => {
    const text = msg.text();
    if (text.includes('saved') || text.includes('error') || text.includes('profile')) {
      console.log('[Browser]', text);
    }
  });

  try {
    console.log('=== COMPLETE HOLIDAY SYSTEM TEST ===\n');

    // 1. Login
    console.log('1. Logging in...');
    await page.goto('http://127.0.0.1:5500/Home.html');
    await page.waitForTimeout(1000);
    await page.fill('#email', 'benhowardmagic@hotmail.com');
    await page.fill('input[type="password"]', 'Hello1!');
    await page.click('button:has-text("Sign In")');
    await page.waitForTimeout(2000);

    // Navigate to staff portal if needed
    const currentUrl = page.url();
    if (currentUrl.includes('admin-dashboard.html')) {
      console.log('   On admin dashboard, navigating to staff portal...');
      await page.goto('http://127.0.0.1:5500/staff.html');
      await page.waitForTimeout(1500);
    }

    // 2. Go to Welcome page
    console.log('\n2. Starting Welcome process...');
    await page.click('button[data-section="welcome"]');
    await page.waitForTimeout(1500);

    // 3. Set nickname
    console.log('\n3. Setting nickname...');
    const nicknameField = await page.locator('#nickname');
    if (await nicknameField.isVisible()) {
      await nicknameField.clear();
      await nicknameField.fill('TestUser_' + Math.floor(Math.random() * 10000));
      console.log('   Nickname set');

      // Click Get started button
      const getStartedBtn = await page.locator('button:has-text("Get started")');
      if (await getStartedBtn.isVisible()) {
        await getStartedBtn.click();
        console.log('   Clicked Get Started');
        await page.waitForTimeout(2000);
      }
    } else {
      console.log('   Nickname field not visible, might already be on step 2');
    }

    // 4. Set role and team
    console.log('\n4. Setting role and team...');
    const step2Visible = await page.isVisible('#welcome-step2');
    console.log('   Step 2 visible:', step2Visible);

    if (step2Visible) {
      const roleField = await page.locator('#role');
      if (await roleField.count() > 0) {
        await roleField.selectOption('manager');
        console.log('   Role set to Manager');
      }

      const teamField = await page.locator('#team');
      if (await teamField.count() > 0) {
        await teamField.fill('Test Team');
        console.log('   Team set to Test Team');
      }

      const toAvatarBtn = await page.locator('#to-avatar-btn');
      if (await toAvatarBtn.isVisible()) {
        await toAvatarBtn.click();
        console.log('   Clicked Continue to Avatar');
        await page.waitForTimeout(2000);
      }
    } else {
      console.log('   Step 2 not visible, checking current step...');
      await page.screenshot({ path: 'test_debug_step.png' });
    }

    // 5. Set avatar
    console.log('\n5. Setting avatar...');
    const step3Visible = await page.isVisible('#welcome-step3');
    if (step3Visible) {
      // Click randomize to generate avatar
      await page.click('#avatar-randomize');
      await page.waitForTimeout(1500);

      // Scroll down and continue
      await page.evaluate(() => window.scrollTo(0, document.body.scrollHeight));
      await page.waitForTimeout(2000);

      // Click continue to working hours
      const continueBtn = await page.locator('#finish-avatar-btn');
      if (await continueBtn.isVisible()) {
        await continueBtn.click();
        await page.waitForTimeout(2000);
      }
    }

    // 6. Set working hours
    console.log('\n6. Setting working hours...');
    const step4Visible = await page.isVisible('#step4');
    if (step4Visible) {
      // Set Monday to 8 hours
      const mondayInput = await page.locator('#monday-val');
      if (await mondayInput.count() > 0) {
        await mondayInput.fill('08:00');
      }

      // Set Tuesday to 8 hours
      const tuesdayInput = await page.locator('#tuesday-val');
      if (await tuesdayInput.count() > 0) {
        await tuesdayInput.fill('08:00');
      }

      // Take screenshot
      await page.screenshot({ path: 'test_working_hours.png' });

      // Click Finish Setup
      console.log('\n7. Completing setup...');
      await page.click('#complete-setup');
      await page.waitForTimeout(3000);
    }

    // 8. Check if completion screen shows
    const step5Visible = await page.isVisible('#step5');
    console.log('\n8. Completion screen visible:', step5Visible);

    if (step5Visible) {
      await page.screenshot({ path: 'test_completion.png' });
      console.log('   ✅ Setup completed successfully!');
    }

    // 9. Verify data in Supabase
    console.log('\n9. Verifying Supabase data...');

    // Sign in to Supabase
    const { data: { user }, error: authError } = await supabase.auth.signInWithPassword({
      email: 'benhowardmagic@hotmail.com',
      password: 'Hello1!'
    });

    if (user) {
      console.log('   Authenticated as:', user.email);

      // Check 1_staff_holiday_profiles
      const { data: holidayProfile } = await supabase
        .from('master_users')
        .select('*')
        .eq('email', user.email)
        .maybeSingle();

      if (holidayProfile) {
        console.log('\n   ✅ Holiday Profile Found:');
        console.log('   - Name:', holidayProfile.full_name);
        console.log('   - Role:', holidayProfile.role);
        console.log('   - Team:', holidayProfile.team_name);
        console.log('   - Avatar:', holidayProfile.avatar_url ? 'Yes' : 'No');
      } else {
        console.log('   ❌ No holiday profile found');
      }

      // Check 2_staff_entitlements
      if (holidayProfile?.id) {
        const { data: entitlement } = await supabase
          .from('2_staff_entitlements')
          .select('*')
          .eq('staff_profile_id', holidayProfile.id)
          .eq('year', new Date().getFullYear())
          .maybeSingle();

        if (entitlement) {
          console.log('\n   ✅ Entitlement Found:');
          console.log('   - Weekly Hours:', entitlement.weekly_hours);
          console.log('   - Multiplier:', entitlement.holiday_multiplier);
          console.log('   - Annual Hours:', entitlement.annual_hours);
          console.log('   - Calculated Hours:', entitlement.calculated_hours);
        } else {
          console.log('   ❌ No entitlement found');
        }
      }

      // Check 3_staff_working_patterns
      const { data: workingPattern } = await supabase
        .from('master_users')
        .select('*')
        .eq('user_id', user.id)
        .maybeSingle();

      if (workingPattern) {
        console.log('\n   ✅ Working Pattern Found:');
        console.log('   - Monday:', workingPattern.monday_hours, 'hours');
        console.log('   - Tuesday:', workingPattern.tuesday_hours, 'hours');
        console.log('   - Total Weekly:',
          parseFloat(workingPattern.monday_hours || 0) +
          parseFloat(workingPattern.tuesday_hours || 0) +
          parseFloat(workingPattern.wednesday_hours || 0) +
          parseFloat(workingPattern.thursday_hours || 0) +
          parseFloat(workingPattern.friday_hours || 0),
          'hours'
        );
      } else {
        console.log('   ❌ No working pattern found');
      }

      // Check 5_staff_profile_user_links
      if (holidayProfile?.id) {
        const { data: link } = await supabase
          .from('5_staff_profile_user_links')
          .select('*')
          .eq('user_id', user.id)
          .eq('staff_profile_id', holidayProfile.id)
          .maybeSingle();

        if (link) {
          console.log('\n   ✅ Profile Link Found');
        } else {
          console.log('   ❌ No profile link found');
        }
      }
    }

  } catch (error) {
    console.error('Test error:', error);
    await page.screenshot({ path: 'test_error.png' });
  } finally {
    console.log('\n=== TEST COMPLETE ===');
    await page.waitForTimeout(3000);
    await browser.close();
    await supabase.auth.signOut();
  }
}

testCompleteHolidayFlow().catch(console.error);
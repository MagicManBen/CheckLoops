#!/usr/bin/env node

// Fix profile records directly via Supabase API
const https = require('https');

const SUPABASE_URL = 'https://unveoqnlqnobufhublyw.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVudmVvcW5scW5vYnVmaHVibHl3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUwMTcyNzYsImV4cCI6MjA3MDU5MzI3Nn0.g93OsXDpO3V9DToU7s-Z3SwBBnB84rBv0JMv-idgSME';
const SERVICE_KEY = (typeof process !== 'undefined' && process.env?.SUPABASE_SERVICE_ROLE_KEY) || '';
if (!SERVICE_KEY) {
  throw new Error('SUPABASE_SERVICE_ROLE_KEY not set in environment');
}

async function makeRequest(path, method, data = null) {
  const url = new URL(path, SUPABASE_URL);

  const options = {
    method: method,
    headers: {
      'apikey': SERVICE_KEY,
      'Authorization': `Bearer ${SERVICE_KEY}`,
      'Content-Type': 'application/json',
      'Prefer': 'return=representation'
    }
  };

  return new Promise((resolve, reject) => {
    const req = https.request(url, options, (res) => {
      let body = '';
      res.on('data', chunk => body += chunk);
      res.on('end', () => {
        try {
          const result = body ? JSON.parse(body) : null;
          if (res.statusCode >= 200 && res.statusCode < 300) {
            resolve(result);
          } else {
            reject(new Error(`HTTP ${res.statusCode}: ${body}`));
          }
        } catch (e) {
          reject(e);
        }
      });
    });

    req.on('error', reject);

    if (data) {
      req.write(JSON.stringify(data));
    }

    req.end();
  });
}

async function fixProfiles() {
  console.log('Fixing profile records for staff users...\n');

  try {
    // First, get the user IDs
    console.log('1. Getting user IDs from auth.users...');
    const authResponse = await makeRequest('/auth/v1/admin/users', 'GET');

    const staffEmails = ['benhowardmagic@hotmail.com', 'ben.howard@stoke.nhs.uk'];
    const users = authResponse.users.filter(u => staffEmails.includes(u.email));

    if (users.length === 0) {
      console.log('No matching users found. Creating them may be needed.');
      return;
    }

    console.log(`Found ${users.length} users to fix.\n`);

    for (const user of users) {
      console.log(`Processing user: ${user.email} (${user.id})`);

      // 2. Upsert profiles record
      console.log('  - Upserting profiles record...');
      const profileData = {
        user_id: user.id,
        site_id: 1,
        full_name: user.user_metadata?.full_name || user.email.split('@')[0],
        nickname: user.user_metadata?.nickname || 'Staff',
        role: user.user_metadata?.role || 'staff',
        avatar_url: user.user_metadata?.avatar_url || '',
        onboarding_complete: true
      };

      try {
        await makeRequest('/rest/v1/profiles', 'POST', profileData);
        console.log('  ✅ Profiles record created/updated');
      } catch (e) {
        if (e.message.includes('duplicate')) {
          // Try update instead
          await makeRequest(`/rest/v1/profiles?user_id=eq.${user.id}`, 'PATCH', profileData);
          console.log('  ✅ Profiles record updated');
        } else {
          console.log(`  ⚠️ Could not update profiles: ${e.message}`);
        }
      }

      // 3. Upsert staff_app_welcome record
      console.log('  - Upserting staff_app_welcome record...');
      const welcomeData = {
        user_id: user.id,
        site_id: 1,
        full_name: user.user_metadata?.full_name || user.email.split('@')[0],
        nickname: user.user_metadata?.nickname || 'Staff',
        role_detail: user.user_metadata?.role || 'staff',
        avatar_url: user.user_metadata?.avatar_url || ''
      };

      try {
        await makeRequest('/rest/v1/staff_app_welcome', 'POST', welcomeData);
        console.log('  ✅ staff_app_welcome record created/updated');
      } catch (e) {
        if (e.message.includes('duplicate')) {
          // Try update instead
          await makeRequest(`/rest/v1/staff_app_welcome?user_id=eq.${user.id}`, 'PATCH', welcomeData);
          console.log('  ✅ staff_app_welcome record updated');
        } else {
          console.log(`  ⚠️ Could not update staff_app_welcome: ${e.message}`);
        }
      }

      console.log('');
    }

    console.log('✅ Profile fixes complete!');

  } catch (error) {
    console.error('Error:', error.message);
  }
}

// Run the fix
fixProfiles();